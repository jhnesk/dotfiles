" .vimrc

set nocompatible

" Plugins
"""""""""
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'SirVer/ultisnips'
Plugin 'scrooloose/nerdtree'
Plugin 'kien/ctrlp.vim'
Plugin 'sjl/gundo.vim'

call vundle#end()

filetype on
filetype plugin on
filetype indent on
syntax on

" Basic
"""""""

set background=dark
set title
set mouse=a
set relativenumber
set number
set virtualedit+=block
set scrolloff=4
set backspace=indent,eol,start
set showmatch

set spellfile=~/.vim/spell/words.utf-8.add

set wildignore+=*.class,*.zip,*.so,*.o

" Buffers
"""""""""

set autowrite
set hidden

" Status line
"""""""""""""

set laststatus=2
set ruler

" Command
"""""""""

set history=400
set showcmd
set wildmenu
set wildmode=list:longest

" Searching
"""""""""""

" Use expressions in patterns by default
set magic
" Highlight search terms
set hlsearch
" Incremental search
set incsearch
" Case insensitive
set ignorecase
" Smart case matching
set smartcase

" Indenting
"""""""""""

set tabstop=4
set shiftwidth=4
set noexpandtab
set autoindent
set smartindent
set cindent
set smarttab

" Extra
"""""""

" Extended % matching
runtime macros/matchit.vim

" Jump to last position when reopening a file
autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Open quick fix window on error
autocmd QuickFixCmdPost [^l]* nested cwindow
autocmd QuickFixCmdPost    l* nested lwindow

" Shortcuts
"""""""""""

let mapleader = ","

map <F1> :NERDTreeToggle<CR>
map <F2> :GundoToggle<CR>
map <F5> :make<CR>

nmap <leader>t :tabnew<CR>
nmap <leader>f :NERDTreeFind<CR>

